"use strict";function openDatabase(){return navigator.serviceWorker?idb.open("restaurant",2,function(t){switch(t.oldVersion){case 0:t.createObjectStore("restaurants",{keyPath:"id"});case 1:t.createObjectStore("reviews",{keyPath:"id"}).createIndex("restaurant","restaurant_id")}}):Promise.resolve()}function IndexController(t){this.DATABASE_URL="http://localhost:1337",this._container=t,this._dbPromise=openDatabase()}IndexController.prototype.fetchReviews=function(e){var n=this;return fetch(this.DATABASE_URL+"/reviews/?restaurant_id="+e).then(function(t){return t.json()}).then(function(r){return n._dbPromise.then(function(t){if(t){var e=t.transaction("reviews","readwrite").objectStore("reviews");r.constructor===Array?r.forEach(function(t){return e.put(t)}):e.put(r)}}),Promise.resolve(r)}).catch(function(t){return n.getObjectFromStore(e).then(function(t){return Promise.resolve(t)})})},IndexController.prototype.getObjectFromStore=function(e){return this._dbPromise.then(function(t){if(t)return t.transaction("reviews").objectStore("reviews").index("restaurant").getAll(e)})},IndexController.prototype._onDataReceived=function(t){var r=t;this._dbPromise.then(function(t){if(t){var e=t.transaction("restaurants","readwrite").objectStore("restaurants");r.forEach(function(t){e.put(t)}),e.openCursor(null,"prev").then(function(t){return t.advance(12)}).then(function t(e){if(e)return e.delete(),e.continue().then(t)})}})},IndexController.prototype.showingData=function(){return!!this._container.querySelector(".restaurant")||!!this._container.querySelector("#breadcrumb")&&2===this._container.querySelector("#breadcrumb").children.length},IndexController.prototype._checkDataExists=function(){return this._dbPromise.then(function(t){return t.transaction("restaurants").objectStore("restaurants").getAll().then(function(t){return t})})};
//# sourceMappingURL=index.js.map
