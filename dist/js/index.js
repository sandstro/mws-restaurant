"use strict";function openDatabase(){return navigator.serviceWorker?idb.open("restaurant",1,function(t){t.createObjectStore("restaurants",{keyPath:"id"})}):Promise.resolve()}function IndexController(t){this._container=t,this._dbPromise=openDatabase(),this._showCachedMessages()}IndexController.prototype._onDataReceived=function(t){var n=t;this._dbPromise.then(function(t){if(t){var e=t.transaction("restaurants","readwrite").objectStore("restaurants");n.forEach(function(t){e.put(t)}),e.openCursor(null,"prev").then(function(t){return t.advance(12)}).then(function t(e){if(e)return e.delete(),e.continue().then(t)})}})},IndexController.prototype._showCachedMessages=function(){var e=this;return this._dbPromise.then(function(t){if(t&&!e.showingData())return t.transaction("restaurants").objectStore("restaurants").getAll().then(function(t){e._container.classList.contains("inside")?e.addRestaurant(t.find(function(t){return t.id==getParameterByName("id")})):e.addRestaurants(t)})})},IndexController.prototype.showingData=function(){return!!this._container.querySelector(".restaurant")||!!this._container.querySelector("#breadcrumb")&&2===this._container.querySelector("#breadcrumb").children.length},IndexController.prototype._checkDataExists=function(){return this._dbPromise.then(function(t){return t.transaction("restaurants").objectStore("restaurants").getAll().then(function(t){return t})})},IndexController.prototype.addRestaurants=function(t){resetRestaurants(t),fillRestaurantsHTML(t)},IndexController.prototype.addRestaurant=function(t){t&&(fillBreadcrumb(t),fillRestaurantHTML(t))};
//# sourceMappingURL=index.js.map
