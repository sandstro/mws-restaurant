{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","map","window","initMap","fetchRestaurantFromURL","error","setTitle","document","querySelector","setAttribute","console","self","google","maps","Map","getElementById","zoom","center","latlng","scrollwheel","fillBreadcrumb","DBHelper","mapMarkerForRestaurant","addListener","callback","id","getParameterByName","fetchRestaurantById","fillRestaurantHTML","name","innerHTML","address","image","className","alt","neighborhood","src","imageUrlForRestaurant","cuisine","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","key","row","createElement","day","tabIndex","appendChild","time","reviews","container","title","noReviews","ul","forEach","createReviewHTML","review","li","date","rating","comments","breadcrumb","url","location","href","replace","regex","RegExp","results","exec","decodeURIComponent"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant;\nvar map;\n\n/**\n * Initialize Google map, called from HTML.\n */\nwindow.initMap = () => {\n  fetchRestaurantFromURL((error, restaurant) => {\n    let setTitle = () => document.querySelector('#map iframe').setAttribute('title', 'Location on Google Maps');\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      self.map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 16,\n        center: restaurant.latlng,\n        scrollwheel: false\n      });\n      fillBreadcrumb();\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\n      self.map.addListener('tilesloaded', setTitle);\n    }\n  });\n}\n\n/**\n * Get current restaurant from page URL.\n */\nlet fetchRestaurantFromURL = (callback) => {\n  if (self.restaurant) { // restaurant already fetched!\n    callback(null, self.restaurant)\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) { // no id found in URL\n    error = 'No restaurant id in URL'\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant)\n    });\n  }\n}\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nlet fillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  const image = document.getElementById('restaurant-img');\n  image.className = 'restaurant-img'\n  image.alt = `An image of ${restaurant.name} in ${restaurant.neighborhood}`;\n  image.src = DBHelper.imageUrlForRestaurant(restaurant);\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n}\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nlet fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n\n    const day = document.createElement('td');\n    day.tabIndex = 0;\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    const time = document.createElement('td');\n    time.tabIndex = 0;\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n}\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nlet fillReviewsHTML = (reviews = self.restaurant.reviews) => {\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h3');\n  title.id = 'reviews__heading'\n  title.innerHTML = 'Reviews';\n  container.appendChild(title);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n}\n\n/**\n * Create review HTML and add it to the webpage.\n */\nlet createReviewHTML = (review) => {\n  const li = document.createElement('li');\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  li.appendChild(name);\n\n  const date = document.createElement('p');\n  date.innerHTML = review.date;\n  li.appendChild(date);\n\n  const rating = document.createElement('p');\n  rating.innerHTML = `Rating: ${review.rating}`;\n  li.appendChild(rating);\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  li.appendChild(comments);\n\n  return li;\n}\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nlet fillBreadcrumb = (restaurant=self.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n}\n\n/**\n * Get a parameter by name from page URL.\n */\nlet getParameterByName = (name, url) => {\n  if (!url)\n    url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results)\n    return null;\n  if (!results[2])\n    return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\n"]}